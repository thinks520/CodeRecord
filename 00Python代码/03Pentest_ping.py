#coding:utf-8

## ping 测试IP是否存活


from Queue import Queue
from threading import Thread
import platform
import subprocess
import subprocess as sp

d=[]
re_obj = ['220.181.111.188','47.91.137.195']
ips = []
queue=Queue()
num_threads=10

def ping1(list):
    for line in list:  # [1.1.1.1,2.2,2,2]
        #for match in re_obj.findall(line):
        ips.append(line)  # 将匹配的记录保存下来 ips列表

    for ip in ips:
        queue.put(ip)  # 将匹配的记录添加到队列中

    # global d

    for i in range(num_threads):
        worker = Thread(target=pinger, args=(i, queue))
        worker.setDaemon(True)
        worker.start()

    print d
     #return True
     # return HttpResponse(json.dumps(d), content_type="application/json")
     # '''
     # if target == Null:
     #     return HttpResponse('记录为空，请重新输入')
     # '''


# 定义ping方法
def pinger(i, q):
    while True:
        ip = q.get()
        if platform.system() == "Linux":
            cmd = "ping -c 3 %s" % ip
            outfile = "/dev/null"
        elif platform.system() == "Windows":
            cmd = "ping -n 3 %s" % ip
            outfile = "ping.temp"
        else:
            cmd = "ping -c 3 %s" % ip
            outfile = "/dev/null"
        ret = subprocess.call(cmd, shell=True, stdout=open(outfile, 'w'), stderr=subprocess.STDOUT)
        if ret == 0:
            print "%s is alive" % ip
            d.append(ip+":0")
        else:
            print "%s is down" % ip
        q.task_done()

        # print d.values()
        # print d.keys()

if __name__ == '__main__':
    ping1(re_obj)