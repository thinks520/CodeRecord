#!/usr/bin/env python
# coding=utf8
######################################
##  代码补丁的少年   zh             ##
##  时间：20170925                  ##
## 批量查询Jboss MXInvokerServlet   ##
######################################
import httplib
import os
import sys
import re



## 读取IP
def JBossScan(weblist):
    fle_context = file(weblist, 'r')
    for file_index in fle_context:
        file_index = file_index.strip('\n')                           # 去掉空行
        file_index = file_index.replace('http://', '')                # 去掉HTTP://
        ip_context = file_index.split(':')                            # 以:分隔
        if len(ip_context)>=2:
            ip = ip_context[-2]                                       # 取列表倒数第二
            pt = ip_context[-1]                                       # 取列表倒数第一
        else:
            ip = ip_context[-1]                                       # 否则取默认IP
            pt = 80                                                   # 默认端口为80
        conn = httplib.HTTPConnection(ip, port=pt, timeout=1)
        try:
            conn.request('HEAD', '/invoker/JMXInvokerServlet')        # 探测这个路径是否存在
        except:
            print '[*]http://%s:%s/invoker/JMXInvokerServlet       ---------------------------Timeout' % (ip, pt)  # 访问不成功就提示超时
            continue
        res = conn.getresponse()
        # HTTP状态码
        if res.status == 200:
            print '[*]http://%s:%s/invoker/JMXInvokerServlet       ---------------------------Found' % (ip, pt)
            os.system(
                'echo http://%s:%s/invoker/JMXInvokerServlet       ---------------------------Found >> scucsess.txt' % (   # 把访问成功的路径存储到.txt
                ip, pt))
        else:
            print '[*]http://%s:%s/invoker/JMXInvokerServlet       ---------------------------Not Found' % (ip, pt)      # 没找到路径，但是开启了相关端口
    fle_context.close()



if __name__ == '__main__':
    try:
        #JBossScan(sys.argv[1])                              # 参数形式
        JBossScan("D:\\WebUrl.txt")  # 固定路径
    except:
        print 'usage: python jbosscan.py weblist.txt'
