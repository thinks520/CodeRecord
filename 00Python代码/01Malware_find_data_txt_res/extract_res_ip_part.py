#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import xlrd
import tablib
from datetime import date, datetime
import glob     # 遍历子目录文件内容

# 第一部分_脚本说明
# 对当前目录下所有文件的指定列（一般为第1列和第2列，这两列均为ip）进行提取，然后对提取到的数据进行去重处理。
# 再删除掉去重后数据中的非ip的那一行（由于数据带有表头，如源ip、目的ip，这些需要删除）。
# 最后将这些数据写入新的文件，如原文件为222.res，新文件可改为222-new.txt。

# 第二步_脚本说明
#  对所有的新生成的文件做重复性检查
#  例如某ip或ip的C段同时出现在哪些文件（第一步中新生成的文件）中，要输出个文件进行提示。


# 额外使用说明
# ip.txt：存放要查找的IP
# 把要查找的多个res放到根目录即可搜索出有该IP的文件名


# 对比内容
res_path_list = []              # excel路径值保存


# 提取指定列，去重复，生成新文件
# 参数1：指定列
# 参数2：指定列
# 参数3：指定Excel路径
def extract_Clear_repeat_new(Num_1,Num_2,res_file_path):
    # IP列表
    res_ip_list = []
    # 读取当前路径文件内容，两列并成一列
    # print res_file_path
    with open(res_file_path,'r') as file:
        for file_value in file.readlines():
            # print file_value.split()[Num_1],file_value.split()[Num_2]
            res_ip_list.append(file_value.split()[Num_1])
            res_ip_list.append(file_value.split()[Num_2])

    # 清除表头【源IP】、
    del res_ip_list[0]
    # 清除表头 【目的IP】
    del res_ip_list[0]
    # 去重复
    finish_excel_list = list(set(res_ip_list))
    # 保存文件
    with open(res_file_path + '-new.txt', 'w') as f:
        for data_value in finish_excel_list:
            f.write(data_value+"\n")
    # 测试效果
    # for value in finish_excel_list:
    #     print value




# 读取目录内结果
def input_multi_file():
    tmp_list = []
	# 只读取res后缀文件
    for _file in glob.glob(os.getcwd()+"//"+ '*.res'):
        tmp_list.append(_file)
        print('[+] The input xls file is %s' % _file)

    return tmp_list


#读取文件函数
def read_file(file_path):
    txt_list = []
    # 判断文件路径是否存在，如果不存在直接退出，否则读取文件内容
    if not os.path.exists(file_path):
        print 'Please confirm correct filepath !'
        sys.exit(0)
    else:
        with open(file_path, 'r') as source:
            for line in source:
                txt_list.append(line.rstrip('\r\n').rstrip('\n'))
    return txt_list



# IP数据对比处理函数
# 对所有的新生成的文件做重复性检查，例如某ip或ip的C段同时出现在哪些文件（第一步中新生成的文件）中，要输出个文件进行提示
def find_rule(ip_list,*args):
    # IP列表
    res_ip_list = []
    # 数据存储
    data = []
    # 参数不对就关闭
    if len(args)>2:
        sys.exit(0)
    # 对比每个txt的值，是不是有类似的IP
    for res_path in res_path_list:
        # 只对比新的文件，取出检查的列数所有值
        file_value  = read_file(res_path + '-new.txt')
        # 行数
        row_count = 0
        for _value in file_value:
            row_count = row_count+1 #行数递增
            for ip in ip_list:
                #print  res_path + '-new.txt',_value,ip
                if _value == ip:
                    print "[+] path",res_path+"-new.txt","ip:",ip,"row",row_count   # 输出当前Excel路径、IP、列数、行数
                    tmp_data = '[+] path：%s-new.txt ip:%s row:%s' % (res_path, ip,row_count)
                    data.append(tmp_data)
                    continue

    # # 保存文件
    with open("search_ip_of_file.txt", 'w') as f:
        for data_value in data:
            f.write(data_value+"\n")

# 对比新的.txt文件，查找相似IP段或是某个IP是否在相同的文件中
def find_C_IP_range():
    filename_list = list()
    ip_list = list()
    output_ip_set = set()
    output_iponly_set = set()
    cur_path = os.path.abspath(os.curdir)
    file_list = res_path_list

    for file in file_list:
        ip_set = set()
        with open(file + '-new.txt', 'r') as fin:
            for line in fin.readlines():
                line = line.replace('\n', '')
                record = line.split()
                for each in record:
                    if each.find('.') > -1 and each.rfind('.') > -1:
                        if each not in ip_set:
                            ip_set.add(each)
        filename_list.append(file)
        ip_list.append(list(ip_set))

    # 二维数组匹配
    for i in xrange(len(ip_list) - 1):
        for j in xrange(i + 1, len(ip_list)):
            for x in xrange(len(ip_list[i])):
                for y in xrange(len(ip_list[j])):
                    if ip_list[i][x] == ip_list[j][y]:
                        output_ip_set.add(ip_list[i][x] + '\t' + filename_list[i])
                        output_ip_set.add(ip_list[j][y] + '\t' + filename_list[j])
                        output_iponly_set.add(ip_list[i][x])
                    if ip_list[i][x][:ip_list[i][x].rfind('.')] == ip_list[j][y][:ip_list[j][y].rfind('.')]:
                        output_ip_set.add(ip_list[i][x] + '\t' + filename_list[i])
                        output_ip_set.add(ip_list[j][y] + '\t' + filename_list[j])
                        output_iponly_set.add(ip_list[i][x])
                        output_iponly_set.add(ip_list[j][y])

    with open('alike_ip_of_file.txt', 'w') as fout:
        output_ip_list = list(output_ip_set)
        output_ip_list.sort()
        for each in output_ip_list:
            fout.write(each + '\n')

if __name__ == '__main__':
    #1、读取目录内的xls文件
    res_path_list = input_multi_file()
    #2、对当前目录下所有文件的指定第1列、第2列(以0为索引),提取去重
    for res_path in res_path_list:
        extract_Clear_repeat_new(0,1,res_path)   # 读取第1、2列的值
    # 3、对比新的.txt文件，查找相似IP段或是某个IP是否在相同的文件中
    find_C_IP_range()
    # 4、查找某些IP
    print "ip.txt 是匹配某个IP存在哪个文件的结果"
    contrasts_list = read_file(os.getcwd() + "\\ip.txt")  # 对比的txt
    # 5、对比规则
    find_rule(contrasts_list,0,1)