#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import xlrd
import tablib
from datetime import date, datetime
import glob     # 遍历子目录文件内容

# 第一部分_脚本说明
# 对当前目录下所有文件的指定列（一般为第1列和第2列，这两列均为ip）进行提取，然后对提取到的数据进行去重处理。
# 再删除掉去重后数据中的非ip的那一行（由于数据带有表头，如源ip、目的ip，这些需要删除）。
# 最后将这些数据写入新的文件，如原文件为222.res，新文件可改为222-new.txt。

# 第二步_脚本说明
#  对所有的新生成的文件做重复性检查
#  例如某ip或ip的C段同时出现在哪些文件（第一步中新生成的文件）中，要输出个文件进行提示。


# 使用说明
# ip.txt：存放要查找的IP
# 把要查找的多个excel放到根目录即可


# 对比内容
excel_path_list = []              # excel路径值保存



# 去重复函数
def check_repeated(one_list):
    '''
    使用排序的方法
    '''
    result_list = []
    temp_list = sorted(one_list)
    i = 0
    while i < len(temp_list):
        if temp_list[i] not in result_list:
            result_list.append(temp_list[i])
        else:
            i += 1
    return result_list

# 提取指定列，去重复，生成新文件
# 参数1：指定列
# 参数2：指定列
# 参数3：指定Excel路径
def extract_Clear_repeat_new(Num_1,Num_2,excel_path):
    # IP列表
    excel_ip_list = []
    # 文件位置
    ExcelFile = xlrd.open_workbook(excel_path)
    # 根据sheet索引获取sheet内容
    sheet = ExcelFile.sheet_by_index(0)
    # 打印sheet的名称，行数，列数
    print ("表名:").decode('UTF-8'), sheet.name, ("列数:").decode('UTF-8'), sheet.nrows, ("行数:").decode(
        'UTF-8'), sheet.ncols
    # 取出指定两列的函数EXCEL数据，去重复存储到列表里
    for j in range(sheet.nrows):
        data = sheet.cell(j, Num_1).value.encode('utf-8')+","+sheet.cell(j, Num_2).value.encode('utf-8')
        excel_ip_list.append(data)
    # 清除表头【源IP】、【目的IP】
    del excel_ip_list[0]
    # 去重复
    finish_excel_list = check_repeated(excel_ip_list)
    # 测试
    print excel_path
    # 保存新的文件
    excel_dataset = tablib.Dataset()       # 初始化

    # 写入数据
    for value in finish_excel_list:
        excel_dataset.append((value.split(",")[0],value.split(",")[1]))
    # 写入文件
    hFile = open(excel_path + '_new.xls', "wb")
    hFile.write(excel_dataset.xls)
    hFile.close()
    # 测试效果
    for value in finish_excel_list:
        print value




# 读取目录内结果
def input_multi_file():
    tmp_list = []
    for _file in glob.glob(os.getcwd()+"//"+ '*.xls'):
        tmp_list.append(_file)
        print('[+] The input xls file is %s' % _file)

    return tmp_list


#读取文件函数
def read_file(file_path):
    txt_list = []
    # 判断文件路径是否存在，如果不存在直接退出，否则读取文件内容
    if not os.path.exists(file_path):
        print 'Please confirm correct filepath !'
        sys.exit(0)
    else:
        with open(file_path, 'r') as source:
            for line in source:
                txt_list.append(line.rstrip('\r\n').rstrip('\n'))
    return txt_list


#读取EXCEL
def read_excel(file_path,Row_Num=0):
    excel_ip_list = []
    # 文件位置
    ExcelFile = xlrd.open_workbook(file_path)
    #根据sheet索引获取sheet内容
    sheet=ExcelFile.sheet_by_index(0)

    # 把EXCEL数据存储到列表里
    for j in range(sheet.nrows):
        excel_ip_list.append(sheet.cell(j, Row_Num).value.encode('utf-8'))

    return excel_ip_list

# IP数据对比处理函数
# 对所有的新生成的文件做重复性检查，例如某ip或ip的C段同时出现在哪些文件（第一步中新生成的文件）中，要输出个文件进行提示
def find_rule(ip_list,*args):
    # IP列表
    excel_ip_list = []
    # 列数
    columns = 0
    # 数据存储
    data = []

    if len(args)>2:
        sys.exit(0)

    # 对比每个excel的值，是不是有类似的IP
    for excel_value in excel_path_list:
        for args_part in range(len(args)):
            # 只对比新的文件，取出检查的列数所有值
            file_value =  read_excel(excel_value+"_new.xls",args_part)
            # 行数
            row_count = 0
            for _value in file_value:
                for ip in ip_list:
                     if _value == ip:
                         print "[+] path",excel_value,"ip:",ip,"column:",args_part+1,"row",row_count+1   # 输出当前Excel路径、IP、列数、行数
                         tmp_data = '[+] path：%s_new.xls ip:%s column:%s row:%s' % (excel_value, ip, args_part+1,row_count+1)
                         data.append(tmp_data)
                row_count = row_count+1 #行数递增

    # 保存文件
    with open("result_outfile.txt", 'w') as f:
        for data_value in data:
            f.write(data_value+"\n")





if __name__ == '__main__':
    #1、读取目录内的xls文件
    excel_path_list = input_multi_file()
    #2、对当前目录下所有文件的指定第1列、第2列(以0为索引),提取去重
    for excel_path in excel_path_list:
        extract_Clear_repeat_new(0,1,excel_path)   # 读取第1、2列的值
    # 3、查找某些IP
    contrasts_list = read_file(os.getcwd() + "\\ip.txt")  # 对比的txt
    # 4、对比规则
    print "ip.txt 是匹配某个IP存在哪个文件的结果"
    find_rule(contrasts_list,0,1)